apply plugin: 'com.github.ben-manes.versions'

buildscript {
  apply from: 'gradle/dependencies.gradle'

  repositories {
    mavenCentral()
    google()
    gradlePluginPortal()
    //mavenLocal()
  }

  dependencies {
    classpath(libs.kotlinGradlePlugin)
    classpath(libs.androidGradlePlugin)
    classpath(libs.versionsGradlePlugin)
    classpath(libs.spotlessGradlePlugin)

    // Normally you would declare a version here, but we use dependency substitution in
    // settings.gradle to use the version built from inside the repo.
    classpath 'app.cash.paparazzi:paparazzi-gradle-plugin'
  }
}

subprojects {
  repositories {
    mavenCentral()
    google()
    //mavenLocal()
  }

  tasks.withType(Test).configureEach {
    testLogging {
      events "failed"
      exceptionFormat "full"
      showExceptions true
      showStackTraces true
      showCauses true
    }
  }

  tasks.withType(JavaCompile).configureEach {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
  }

  tasks.withType(org.jetbrains.kotlin.gradle.dsl.KotlinJvmCompile).configureEach {
    kotlinOptions {
      jvmTarget = "1.8"
    }
  }

  apply plugin: 'com.diffplug.spotless'
  spotless {
    kotlin {
      target("src/**/*.kt")
      // ktlint doesn't honour .editorconfig yet: https://github.com/diffplug/spotless/issues/142
      ktlint('0.46.1').editorConfigOverride([
        'insert_final_newline': 'true',
        'end_of_line': 'lf',
        'charset': 'utf-8',
        'indent_size': '2',
        'trim_trailing_whitespace': 'true',
        'ij_kotlin_imports_layout': '*,java.**,javax.**,kotlin.**,kotlinx.**,^'
      ])
    }
  }
}

tasks.register("clean", Delete).configure {
  delete rootProject.buildDir
}

tasks.named("wrapper").configure {
  distributionType = Wrapper.DistributionType.ALL
}

