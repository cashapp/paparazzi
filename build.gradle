buildscript {
  repositories {
    mavenCentral()
    google()
    gradlePluginPortal()
    //mavenLocal()
  }

  dependencies {
    classpath libs.plugin.kotlin
    classpath libs.plugin.kotlin.compose
    classpath libs.plugin.kotlinApiDump
    classpath libs.plugin.android
    classpath libs.plugin.mavenPublish
    classpath libs.plugin.dokka
    classpath libs.plugin.spotless
    classpath libs.plugin.buildConfig
    classpath libs.plugin.poko

    // Normally you would declare a version here, but we use dependency substitution in
    // settings.gradle to use the version built from inside the repo.
    classpath 'app.cash.paparazzi:paparazzi-gradle-plugin'
    classpath 'app.cash.paparazzi:aar2jar'
  }
}

apply plugin: 'binary-compatibility-validator'

apiValidation {
  ignoredProjects += ['sample']
}

subprojects {
  version = property("VERSION_NAME") as String

  repositories {
    mavenCentral()
    google()
    //mavenLocal()
  }

  // Uncomment to debug JNI issues in layoutlib
  // jvmArgs '-Xcheck:jni'
  tasks.withType(Test).configureEach {
    testLogging {
      events "passed", "failed", "skipped", "standardOut", "standardError"
      exceptionFormat "full"
      showExceptions true
      showStackTraces true
      showCauses true
    }
  }

  tasks.withType(JavaCompile).configureEach {
    sourceCompatibility = libs.versions.javaTarget.get()
    targetCompatibility = libs.versions.javaTarget.get()
  }

  tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinJvmCompile).configureEach {
    kotlinOptions {
      jvmTarget = libs.versions.javaTarget.get()
    }
  }

  plugins.withId('org.jetbrains.kotlin.jvm') {
    extensions.getByName('kotlin').explicitApi()
  }

  plugins.withId('com.vanniktech.maven.publish') {
    publishing {
      repositories {
        maven {
          name = "projectLocalMaven"
          url = rootProject.layout.buildDirectory.dir("localMaven")
        }
        /**
         * Want to push to an internal repository for testing?
         * Set the following properties in ~/.gradle/gradle.properties.
         *
         * internalUrl=YOUR_INTERNAL_URL
         * internalUsername=YOUR_USERNAME
         * internalPassword=YOUR_PASSWORD
         */
        maven {
          name = "internal"
          url = providers.gradleProperty("internalUrl")
          credentials(PasswordCredentials)
        }
      }
    }
  }

  apply plugin: 'com.diffplug.spotless'
  spotless {
    kotlin {
      target("src/**/*.kt")
      ktlint(libs.ktlint.core.get().version)
        .setEditorConfigPath(rootProject.file(".editorconfig"))
    }
  }
}

tasks.register("clean", Delete).configure {
  delete(rootProject.layout.buildDirectory)
}
