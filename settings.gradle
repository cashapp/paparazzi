rootProject.name = 'paparazzi-root'

include ':libs:layoutlib'
include ':libs:native-macarm'
include ':libs:native-macosx'
include ':libs:native-win'
include ':libs:native-linux'
include ':paparazzi'
include ':paparazzi-agent'
include ':paparazzi-gradle-plugin'

include ':sample'

enableFeaturePreview('TYPESAFE_PROJECT_ACCESSORS')

includeBuild('build-logic') {
  dependencySubstitution {
    substitute module('app.cash.paparazzi:paparazzi-gradle-plugin') using project(':paparazzi-gradle-plugin')
  }
}

def brokenProjects = [
  "appcompat-missing",
  "invalid-application-plugin",
  "missing-library-plugin",
  "multiplatform-plugin-without-android",
  "night-mode-xml", // TODO fix this one or remove it? Maybe left out of PaparazziPluginTest by accident?
]

new File(rootDir, "paparazzi-gradle-plugin/src/test/projects").eachDir {
  def dirName = it.name
  if (!dirName.startsWith(".") && !brokenProjects.contains(dirName)) {
    include ":test-projects:$dirName"
    project(":test-projects:$dirName").projectDir = new File(rootDir, "paparazzi-gradle-plugin/src/test/projects/$dirName")
  }
}
