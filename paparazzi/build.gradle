apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

dependencies {
  def androidToolsVersion = '26.5.0'

  api 'app.cash.paparazzi:layoutlib:3.4.0'
  api "com.android.tools:common:${androidToolsVersion}"
  api "com.android.tools.layoutlib:layoutlib-api:${androidToolsVersion}"
  api "com.android.tools:sdk-common:${androidToolsVersion}"
  api 'kxml2:kxml2:2.3.0'
  api 'junit:junit:4.12'
  api 'androidx.annotation:annotation:1.1.0'
  api 'com.google.guava:guava:27.1-jre'
  api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.1'
  api 'com.squareup.okio:okio:2.3.0'
  implementation 'com.squareup.moshi:moshi:1.8.0'
  implementation 'com.squareup.moshi:moshi-adapters:1.6.0'
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
  implementation 'org.jcodec:jcodec:0.2.3'
  implementation 'org.jcodec:jcodec-javase:0.2.3'

  testImplementation 'org.assertj:assertj-core:3.11.0'
}

compileKotlin {
  kotlinOptions {
    jvmTarget = "1.8"
  }
}

compileTestKotlin {
  kotlinOptions {
    jvmTarget = "1.8"
  }
}

afterEvaluate { project ->
  project.tasks.dokka {
    outputDirectory = "$rootDir/docs/0.x"
    outputFormat = 'gfm'
    reportUndocumented = false
    skipDeprecated = true
    jdkVersion = 8
    packageOptions {
      prefix = "app.cash.paparazzi.internal"
      suppress = true
    }
  }
}

apply from: "$rootDir/gradle/gradle-mvn-push.gradle"

def generateTestConfig = tasks.register("generateTestConfig") {
  doLast {
    File configParent = new File("$buildDir/intermediates/paparazzi")
    configParent.mkdirs()
    File configFile = new File(configParent, "resources.txt")
    configFile.withWriter('utf-8') { writer ->
      writer.writeLine("app.cash.paparazzi")
      writer.writeLine(".")
    }
  }
}

test {
  dependsOn(generateTestConfig)
}