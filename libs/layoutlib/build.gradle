import org.ajoberstar.grgit.Grgit

apply plugin: 'com.vanniktech.maven.publish'

/**
 * Clone AOSP's prebuilts repo to get a prebuilt layoutlib jar. This big repo that takes a long time to clone!
 *
 * https://android.googlesource.com/platform/prebuilts/studio/layoutlib/+/refs/tags/studio-4.1.0/PREBUILT
 */
tasks.register('cloneLayoutlib') {
  it.outputs.dir(repoDir)
  it.inputs.property('layoutlibVersion', libs.versions.layoutlib)

  doFirst {
    // Gradle aggressively creates outputs directories, which interferes with the git clone check
    if (repoDir.exists() && !repoDir.list()) {
      repoDir.delete()
    }
    Grgit grgit
    String tag = "refs/tags/studio-${libs.versions.layoutlib.get()}"
    if (!repoDir.exists()) {
      logger.lifecycle("Cloning prebuilt layoutlib to ${repoDir}...")
      grgit = Grgit.clone {
        dir = repoDir
        uri = "https://android.googlesource.com/platform/prebuilts/studio/layoutlib"
        depth = 1
        branches = [ tag ]
        all = false
        refToCheckout = tag
      }
      logger.lifecycle('Cloned prebuilt layoutlib.')
    } else {
      logger.lifecycle("Using existing prebuilt layoutlib clone in ${repoDir}.")
      grgit = Grgit.open {
        dir = repoDir
      }
    }
    grgit.withCloseable { repo ->
      logger.lifecycle("Fetching tag ${tag}")
      repo.fetch {
        refSpecs = [ tag ]
        depth = 1
      }
      logger.lifecycle("Checking out tag ${tag}")
      repo.checkout {
        branch = tag
      }
    }
  }
}

/**
 * Publish layoutlib.jar to Maven Central with Paparazzi coordinates.
 */
mavenPublishing {
  coordinates(property("GROUP"), property("POM_ARTIFACT_ID"), libs.versions.layoutlib.get())
}

publishing {
  publications {
    mavenNativeLibrary(MavenPublication) {
      artifact(tasks.
          named("cloneLayoutlib").
          map { new File(it.outputs.files.getSingleFile(), 'data/layoutlib.jar') }
      )
      artifact emptySourcesJar
      artifact emptyJavadocJar
    }
  }
}
